/*
COLORS:

Light green: #7ed56f
Medium green: #55c57a
Dark green: #28b485

*/

/* base css */
* { 
margin: 0;
padding: 0;
box-sizing: border-box;
}

body { 
    /* base font */
    font-family: 'Lato', sans-serif;
    font-weight: 400;
    font-size: 16px;
    line-height: 1.7;
    color: #777;

    padding: 30px;
}

.header {
    height: 95vh; /* 95% of viewport height */
    background-image: 
        linear-gradient(to right bottom, #7ed56fc0, #28b485c0), 
        url(../img/hero.jpg);
    background-size: cover; /* fit the width of the viewport */
    clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);
    position: relative;
}

.logo-box {
    position: absolute; /* absolute reference to closest parent which has relative position property */
    top: 40px;
    left: 40px;
}

.logo {
    height: 35px;
}

.text-box { 
    /* centering */
    position: absolute;
    top: 40%;
    left: 50%;
    transform: translate(-50%, -50%);

    text-align: center;
}

.heading-primary {
    color: #fff;
    text-transform: uppercase;

    /* fixing shaky animation */
    backface-visibility: hidden;

    margin-bottom: 60px;
}

.heading-primary-main {
    display: block;
    font-size: 60px;
    font-weight: 400;
    letter-spacing: 35px;

    /* only properties required for animation to work */
    animation-name: moveInLeft;
    animation-duration: 1s;

    /*
    animation-delay: 3s; delays animation
    animation-iteration-count: 3; repeats animation
    */

    animation-timing-function: ease-out;
}

.heading-primary-sub {
    display: block;
    font-size: 20px;
    font-weight: 700;
    letter-spacing: 17.4px;

    animation: moveInRight 1s ease-out;
}

/* browser animation - best to do opacity and transform only */
@keyframes moveInLeft {
    0% { /* start of the animation */
        opacity: 0; /* invisible */
        transform: translateX(-100px); /* start from 100px to the left */
    }

    70% {
        transform: translateX(10px);
    }

    100% { /* end of the animation */
        opacity: 1; /* visible */
        transform: translate(0);
    }
}

@keyframes moveInRight {
    0% { /* start of the animation */
        opacity: 0; /* invisible */
        transform: translateX(100px); /* start from 100px to the right */
    }

    70% {
        transform: translateX(-10px);
    }

    100% { /* end of the animation */
        opacity: 1; /* visible */
        transform: translate(0);
    }
}

@keyframes moveInBottom {
    0% { /* start of the animation */
        opacity: 0; /* invisible */
        transform: translateY(30px); /* start from 100px to the bottom */
    }

    100% { /* end of the animation */
        opacity: 1; /* visible */
        transform: translate(0);
    }
}

.btn:link,
.btn:visited { /* :link, :visited, etc are a pseudo-class - it defines a state of a selector */
    text-transform: uppercase;
    text-decoration: none;
    padding: 15px 40px;
    border-radius: 100px;
    transition: all .2s;

    /* box model will work as if it is block element. 
    We should do this when we want to give paddings, heights or width */
    display: inline-block; 

    position: relative;
}

.btn:hover {
    transform: translateY(-3px);
    box-shadow: 0 10px 20px rgba(0, 0, 0, .2); /* x-axis y-axis- blur color */
}

.btn:active { /* clicked */
    transform: translateY(-1px);
    box-shadow: 0 5px 10px rgba(0, 0, 0, .2); /* x-axis y-axis- blur color */
}

.btn-white {
    background-color: #fff;
    color: #777;
}

.btn::after {
    content: "";
    display: inline-block;
    height: 100%;
    width: 100%;
    border-radius: 100px;
    position: absolute;
    top: 0;
    left: 0;
    z-index: -1;
    transition: all .4s; /* transition is always defined in initial state */
}

.btn-white::after {
    background-color: #fff;
}

.btn:hover::after {
    transform: scaleX(1.4) scaleY(1.6);
    opacity: 0;
}

.btn-animated {
    animation: moveInBottom .5s ease-out .75s; /* anim-name anim-duration anim-timing-function anim-delay */
    animation-fill-mode: backwards; /* apply 0% styles before animation starts */
}